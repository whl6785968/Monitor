/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-04-20 10:30:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dynamicChart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"../../statics/layui.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../statics/css/layui.css\" media=\"all\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/statics/js/bootstrap.min.js\" media=\"all\">\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"/echarts/echarts.min.js\" media=\"all\"> -->\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/echarts/echarts.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/echarts/china.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/echarts/dataTool.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/echarts/macarons.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"longpolling();monitorD()\">\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"dynamicChart\" style=\"display: none;\">\r\n");
      out.write("        <!-- 为 ECharts 准备一个具备大小（宽高）的 DOM -->\r\n");
      out.write("        \r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"layui-fluid\">\r\n");
      out.write("\t\t<div class=\"layui-row layui-col-space15\">\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<a href=\"javascript:longpolling()\" class=\"layui-btn\">按我</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"layui-card\">\r\n");
      out.write("\t\t\t\t<div class=\"layui-card-header\">\r\n");
      out.write("\t\t\t\t\t<h1>动态数据展示</h1>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"layui-card-body\">\r\n");
      out.write("\t\t\t\t\t<div class=\"dataview\">\r\n");
      out.write("\t\t\t\t\t\t <div id=\"dynamicChart\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t <div id=\"dynamicChartMain\" style=\"width: 600px; height: 332px;position: relative;\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"layui-col-md6\">\r\n");
      out.write("\t\t\t\t<div class=\"layui-card-header\">\r\n");
      out.write("\t\t\t\t\t\t<h1>动态数据展示</h1>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"layui-card-body\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"dataview\">\r\n");
      out.write("\t\t\t\t\t\t\t <div id=\"dynamicChart\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t <div id=\"shiftApushChartMain\" style=\"width: 600px; height: 332px;position: relative;\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tDate.prototype.format = function(fmt) { \r\n");
      out.write("\t    var o = { \r\n");
      out.write("\t       \"M+\" : this.getMonth()+1,                 //月份 \r\n");
      out.write("\t       \"d+\" : this.getDate(),                    //日 \r\n");
      out.write("\t       \"h+\" : this.getHours(),                   //小时 \r\n");
      out.write("\t       \"m+\" : this.getMinutes(),                 //分 \r\n");
      out.write("\t       \"s+\" : this.getSeconds(),                 //秒 \r\n");
      out.write("\t       \"q+\" : Math.floor((this.getMonth()+3)/3), //季度 \r\n");
      out.write("\t       \"S\"  : this.getMilliseconds()             //毫秒 \r\n");
      out.write("\t   }; \r\n");
      out.write("\t   if(/(y+)/.test(fmt)) {\r\n");
      out.write("\t           fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length)); \r\n");
      out.write("\t   }\r\n");
      out.write("\t    for(var k in o) {\r\n");
      out.write("\t       if(new RegExp(\"(\"+ k +\")\").test(fmt)){\r\n");
      out.write("\t            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\r\n");
      out.write("\t        }\r\n");
      out.write("\t    }\r\n");
      out.write("\t   return fmt; \r\n");
      out.write("\t}       \r\n");
      out.write("\r\n");
      out.write("\tfunction longpolling(){\r\n");
      out.write("\t\tlayui.use(['jquery','layer'],function(){\r\n");
      out.write("\t\t\tvar $$ = layui.jquery;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$$.ajax({\r\n");
      out.write("\t\t\t\ttype:'post',\r\n");
      out.write("\t\t\t\turl:'/getDynamicChart',\r\n");
      out.write("\t\t\t\tdataType:'json',\r\n");
      out.write("\t\t\t\tdata:{\"id\":1},\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\tif(data!=null)\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\talert(data);\r\n");
      out.write("\t\t\t\t\t\trefreshData(data);\r\n");
      out.write("\t\t\t\t\t\tlongpolling();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(XmlHttpRequest, textStatus, errorThrown){\r\n");
      out.write("\t\t\t\t\talert(\"错误信息:\"+XmlHttpRequest.status);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction refreshData(data){\r\n");
      out.write("\t\tvar rowData = [];\r\n");
      out.write("\t\tvar x =[]\r\n");
      out.write("\t\tfor(var i=0;i<data.length;i++){\r\n");
      out.write("\t\t\trowData.push(data[i].eparam1);\r\n");
      out.write("\t\t\tx.push(data[i].ename);\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\toption = {\r\n");
      out.write("\t\t\t    title : {\r\n");
      out.write("\t\t\t        text: '设备动态数据表',\r\n");
      out.write("\t\t\t        subtext: '纯属虚构'\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t        trigger: 'axis'\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    legend: {\r\n");
      out.write("\t\t\t        data:['参数1']\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    toolbox: {\r\n");
      out.write("\t\t\t        show : true,\r\n");
      out.write("\t\t\t        feature : {\r\n");
      out.write("\t\t\t            mark : {show: true},\r\n");
      out.write("\t\t\t            dataView : {show: true, readOnly: false},\r\n");
      out.write("\t\t\t            magicType : {show: true, type: ['line', 'bar']},\r\n");
      out.write("\t\t\t            restore : {show: true},\r\n");
      out.write("\t\t\t            saveAsImage : {show: true}\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    calculable : true,\r\n");
      out.write("\t\t\t    xAxis : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'category',\r\n");
      out.write("\t\t\t            boundaryGap : false,\r\n");
      out.write("\t\t\t     \t\tdata:x\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    yAxis : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'value',\r\n");
      out.write("\t\t\t          /*   axisLabel : {\r\n");
      out.write("\t\t\t                formatter: '{value} °C'\r\n");
      out.write("\t\t\t            } */\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    series : [{\r\n");
      out.write("\t\t\t    \ttype:'bar',\r\n");
      out.write("\t\t\t    \tdata:rowData\r\n");
      out.write("\t\t\t    }]\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t var myChart = echarts.init(document.getElementById('dynamicChartMain'),'macarons'); \r\n");
      out.write("\t\t myChart.setOption(option);\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tfunction monitorD(){\r\n");
      out.write("\t\tlayui.use(['jquery','layer'],function(){\r\n");
      out.write("\t\t\tvar $$ = layui.jquery;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$$.ajax({\r\n");
      out.write("\t\t\t\ttype:'post',\r\n");
      out.write("\t\t\t\turl:'/getDpChart',\r\n");
      out.write("\t\t\t\tdataType:'json',\r\n");
      out.write("\t\t\t\tdata:{\"id\":1},\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\tif(data!=null)\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\talert(data);\r\n");
      out.write("\t\t\t\t\t\trefreshDp(data);\r\n");
      out.write("\t\t\t\t\t\tmonitorD();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(XmlHttpRequest, textStatus, errorThrown){\r\n");
      out.write("\t\t\t\t\talert(\"错误信息:\"+XmlHttpRequest.status);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction refreshDp(data){\r\n");
      out.write("\t\tvar total = 20;\r\n");
      out.write("\t\tvar ddate = [];\r\n");
      out.write("\t\tvar param = [];\r\n");
      out.write("\t\tvar overHighWarn = [];\r\n");
      out.write("\t\tfor(var i=0;i<data.length;i++){\r\n");
      out.write("\t\t\tvar coommonTime = new Date(data[i].ddate);\r\n");
      out.write("\t\t\tif(coommonTime != null)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t/* var fmt = (coommonTime.getFullYear() + '-' + (coommonTime.getMonth()+1) + '-' + coommonTime.getDate()).subString(); */\r\n");
      out.write("\t\t\t\tvar time = coommonTime.format(\"yyyy-MM-dd hh:mm:ss\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(i<=total){\r\n");
      out.write("\t\t\t\tif(data[i].dparam<12)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\toverHighWarn.push(data[i].dparam);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tddate.push(time);\r\n");
      out.write("\t\t\t\tparam.push(data[i].dparam);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\t/* var ct = new Date(data[i].ddate).toLocaleString() */\r\n");
      out.write("\t\t\t\tddate.shift();\r\n");
      out.write("\t\t\t\tparam.shift();\r\n");
      out.write("\t\t\t\tddate.push(time);\r\n");
      out.write("\t\t\t\tparam.push(data[i].dparam);\r\n");
      out.write("\t\t\t\tif(data[i].dparam<12)\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\toverHighWarn.push(data[i].dparam);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\talert(overHighWarn.length);\r\n");
      out.write("\t\tif(overHighWarn.length>3)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tmarkError(overHighWarn);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\toption = {\r\n");
      out.write("\t\t\t    title : {\r\n");
      out.write("\t\t\t        text: '设备动态数据表',\r\n");
      out.write("\t\t\t        subtext: '纯属虚构'\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t        trigger: 'axis'\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    legend: {\r\n");
      out.write("\t\t\t        data:['参数1']\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    toolbox: {\r\n");
      out.write("\t\t\t        show : true,\r\n");
      out.write("\t\t\t        feature : {\r\n");
      out.write("\t\t\t            mark : {show: true},\r\n");
      out.write("\t\t\t            dataView : {show: true, readOnly: false},\r\n");
      out.write("\t\t\t            magicType : {show: true, type: ['line', 'bar']},\r\n");
      out.write("\t\t\t            restore : {show: true},\r\n");
      out.write("\t\t\t            saveAsImage : {show: true}\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    calculable : true,\r\n");
      out.write("\t\t\t    xAxis : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'category',\r\n");
      out.write("\t\t\t            boundaryGap : false,\r\n");
      out.write("\t\t\t     \t\tdata:ddate\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    yAxis : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'value',\r\n");
      out.write("\t\t\t          /*   axisLabel : {\r\n");
      out.write("\t\t\t                formatter: '{value} °C'\r\n");
      out.write("\t\t\t            } */\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    series : [{\r\n");
      out.write("\t\t\t    \ttype:'line',\r\n");
      out.write("\t\t\t    \tdata:param,\r\n");
      out.write("\t\t\t    \tsymbol:'emptyCircle',\r\n");
      out.write("\t\t\t    \tsymbolSize:'3.5',\r\n");
      out.write("\t\t\t    \t lineStyle:{  \r\n");
      out.write("                         color:'#30dbdb'  \r\n");
      out.write("                     },\r\n");
      out.write("\t\t\t\t\titemStyle:{\r\n");
      out.write("\t\t\t\t\t\tnormal:{\r\n");
      out.write("\t\t\t\t\t\t\tlabel:{\r\n");
      out.write("\t\t\t\t\t\t\t\tshow:true,\r\n");
      out.write("\t\t\t    \t\t\t\tfontSize:10,\r\n");
      out.write("\t\t\t    \t\t\t\tposition:'top',\r\n");
      out.write("\t\t\t    \t\t\t\tformatter:function(param)\r\n");
      out.write("\t\t\t    \t\t\t\t{\r\n");
      out.write("\t\t\t    \t\t\t\t\tif(param.value>15)\r\n");
      out.write("\t\t\t    \t\t\t\t\t{\r\n");
      out.write("\t\t\t\t    \t\t\t\t\treturn param.value + '偏高'\r\n");
      out.write("\t\t\t    \t\t\t\t\t}\r\n");
      out.write("\t\t\t    \t\t\t\t\telse if(param.value<12)\r\n");
      out.write("\t\t\t    \t\t\t\t\t{\r\n");
      out.write("\t\t\t    \t\t\t\t\t\treturn param.value + '偏低'\r\n");
      out.write("\t\t\t    \t\t\t\t\t}\r\n");
      out.write("\t\t\t    \t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tcolor:function(param)\r\n");
      out.write("\t\t    \t\t\t\t{\r\n");
      out.write("\t\t    \t\t\t\t\tif(param.value>15){\r\n");
      out.write("\t\t    \t\t\t\t\t\treturn '#ff0000';\r\n");
      out.write("\t\t    \t\t\t\t\t}\r\n");
      out.write("\t\t    \t\t\t\t\telse if(param.value<12)\r\n");
      out.write("\t\t    \t\t\t\t\t{\r\n");
      out.write("\t\t    \t\t\t\t\t\treturn '#ff0000';\r\n");
      out.write("\t\t    \t\t\t\t\t}\r\n");
      out.write("\t\t    \t\t\t\t\telse {\r\n");
      out.write("\r\n");
      out.write("\t\t    \t\t\t\t        return '#30dbdb';\r\n");
      out.write("\r\n");
      out.write("\t\t    \t\t\t\t    }\r\n");
      out.write("\t\t    \t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t  \tmarkLine:{\r\n");
      out.write("\t\t\t    \t\tsymbol:\"none\",\r\n");
      out.write("\t\t\t    \t\tlabel:{\r\n");
      out.write("\t\t\t    \t\t\tposition:\"start\"\r\n");
      out.write("\t\t\t    \t\t},\r\n");
      out.write("\t\t\t    \t\tdata:[{\r\n");
      out.write("\t\t\t    \t\t\tsilent:false,\r\n");
      out.write("\t\t\t    \t\t\tlineStyle:{\r\n");
      out.write("\t\t\t    \t\t\t\ttype:\"solid\",\r\n");
      out.write("\t\t\t    \t\t\t\tcolor:\"#30dbdb\"\r\n");
      out.write("\t\t\t    \t\t\t},\r\n");
      out.write("\t\t\t    \t\t\tyAxis:15.0\r\n");
      out.write("\t\t\t    \t\t}],\r\n");
      out.write("\t\t\t    \t\r\n");
      out.write("\t\t\t    \t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    }]\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t var myChart = echarts.init(document.getElementById('shiftApushChartMain'),'macarons'); \r\n");
      out.write("\t\t myChart.setOption(option);\r\n");
      out.write("\t\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction markError(overHighWarn)\r\n");
      out.write("\t{\r\n");
      out.write("\t\tlayui.use(['layer','jquery'],\r\n");
      out.write("\t\t\t\tfunction()\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\tvar $$ = layui.jquery,\r\n");
      out.write("\t\t\t\t\tlayer = layui.layer;\r\n");
      out.write("\t\t\t\t\talert(\"该设备坏掉了\");\r\n");
      out.write("\t\t\t\t\talert(overHighWarn);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
