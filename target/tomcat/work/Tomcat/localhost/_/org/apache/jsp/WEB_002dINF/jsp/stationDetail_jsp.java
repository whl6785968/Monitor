/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-04-23 12:36:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class stationDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>JSP Page</title>\r\n");
      out.write("<script src=\"../../statics/layui.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../../statics/css/layui.css\" media=\"all\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/statics/js/bootstrap.min.js\" media=\"all\">\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"/echarts/echarts.min.js\" media=\"all\"> -->\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\"\r\n");
      out.write("\tsrc=\"/echarts/echarts.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"/echarts/china.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\"\r\n");
      out.write("\tsrc=\"/echarts/dataTool.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" charset=\"utf-8\" src=\"/echarts/macarons.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".layui-col-md6 {\r\n");
      out.write("\theight: 500px;\r\n");
      out.write("\tborder: 1px red solid;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"layui-fluid\">\r\n");
      out.write("\t\t<div class=\"layui-row layui-col-space20\">\r\n");
      out.write("\t\t\t<div class=\"layui-col-md12\">\r\n");
      out.write("\t\t\t\t<div class=\"layui-col-md6\">\r\n");
      out.write("\t\t\t\t\t<div id=\"speedChart\" style=\"display: none;\"></div>\r\n");
      out.write("\t\t\t\t\t<div id=\"speedChartMain\"\r\n");
      out.write("\t\t\t\t\t\tstyle=\"width: 600px; height: 332px; position: relative;\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"layui-col-md6\">\r\n");
      out.write("\t\t\t\t\t<table class=\"layui-table\">\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><button class=\"layui-btn layui-btn-normal\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonclick=\"switchBar()\">转换柱状图</button></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><button class=\"layui-btn layui-btn-normal\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonclick=\"switchLine()\">转换折线图</button></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar itime = [];\r\n");
      out.write("\t\tvar tss = [];\r\n");
      out.write("\t\tvar cod =[];\r\n");
      out.write("\t\tvar tn =[];\r\n");
      out.write("\t\tvar tp=[];\r\n");
      out.write("\t\tvar dis = [];\r\n");
      out.write("\t\tvar ph = [];\r\n");
      out.write("\t\tvar temper =[];\r\n");
      out.write("\t\tvar nhn = [];\r\n");
      out.write("\t\tvar condu =[];\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\toption = {\r\n");
      out.write("\t\t\t    title : {\r\n");
      out.write("\t\t\t        text: '水质参数变化',\r\n");
      out.write("\t\t\t        subtext: '纯属虚构'\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t        trigger: 'axis'\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    legend: {\r\n");
      out.write("\t\t\t        data:['tss','cod','tn','tp','dissolve','temperture','conductivity'],\r\n");
      out.write("\t\t\t        y:60\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    toolbox: {\r\n");
      out.write("\t\t\t        show : true,\r\n");
      out.write("\t\t\t        feature : {\r\n");
      out.write("\t\t\t            mark : {show: true},\r\n");
      out.write("\t\t\t            dataView : {show: true, readOnly: false},\r\n");
      out.write("\t\t\t            magicType : {show: true, type: ['line', 'bar']},\r\n");
      out.write("\t\t\t            restore : {show: true},\r\n");
      out.write("\t\t\t            saveAsImage : {show: true}\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    grid: {\r\n");
      out.write("\t\t\t    \t\t/* top:'30%' */\r\n");
      out.write("\t\t\t    \t\ty:110,\r\n");
      out.write("\t\t\t    \t\ty2:20,\r\n");
      out.write("\t\t\t    \t\tx:100\r\n");
      out.write("\t\t\t    \t  },\r\n");
      out.write("\t\t\t    calculable : true,\r\n");
      out.write("\t\t\t    xAxis : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'category',\r\n");
      out.write("\t\t\t            boundaryGap : false,\r\n");
      out.write("\t\t\t            data : itime,\r\n");
      out.write("\t\t\t            boundaryGap:true\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    yAxis : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'value',\r\n");
      out.write("\t\t\t            name:'各值'\r\n");
      out.write("\t\t\t           /*  axisLabel : {\r\n");
      out.write("\t\t\t                formatter: '{value} °C'\r\n");
      out.write("\t\t\t            } */\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            type : 'value',\r\n");
      out.write("\t\t\t             name : '温度',\r\n");
      out.write("\t\t\t            axisLabel : {\r\n");
      out.write("\t\t\t                formatter: '{value} °C'\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ],\r\n");
      out.write("\t\t\t    series : [\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            name:'tss',\r\n");
      out.write("\t\t\t            type:'line',\r\n");
      out.write("\t\t\t            data:tss,\r\n");
      out.write("\t\t\t          /*   markPoint : {\r\n");
      out.write("\t\t\t                data : [\r\n");
      out.write("\t\t\t                    {type : 'max', name: '最大值'},\r\n");
      out.write("\t\t\t                    {type : 'min', name: '最小值'}\r\n");
      out.write("\t\t\t                ]\r\n");
      out.write("\t\t\t            },\r\n");
      out.write("\t\t\t            markLine : {\r\n");
      out.write("\t\t\t                data : [\r\n");
      out.write("\t\t\t                    {type : 'average', name: '平均值'}\r\n");
      out.write("\t\t\t                ]\r\n");
      out.write("\t\t\t            } */\r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            name:'cod',\r\n");
      out.write("\t\t\t            type:'line',\r\n");
      out.write("\t\t\t            data:cod\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            name:'tn',\r\n");
      out.write("\t\t\t            type:'line',\r\n");
      out.write("\t\t\t            data:tn\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            name:'tp',\r\n");
      out.write("\t\t\t            type:'line',\r\n");
      out.write("\t\t\t            data:tp\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t      /*    {\r\n");
      out.write("\t\t\t            name:'nhn',\r\n");
      out.write("\t\t\t            type:'bar',\r\n");
      out.write("\t\t\t            data:nhn\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t        }, */\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            name:'temperture',\r\n");
      out.write("\t\t\t            type:'bar',\r\n");
      out.write("\t\t\t            data:temper,\r\n");
      out.write("\t\t\t            yAxisIndex: 1,\r\n");
      out.write("\t\t\t            barWidth:20,\r\n");
      out.write("\t\t\t            barCateGoryGap:20\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t        },\r\n");
      out.write("\t\t\t        {\r\n");
      out.write("\t\t\t            name:'conductivity',\r\n");
      out.write("\t\t\t            type:'line',\r\n");
      out.write("\t\t\t            data:condu\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    ]\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\tvar myChart = echarts.init(document.getElementById('speedChartMain'),'macarons');\r\n");
      out.write("\t\t\tmyChart.setOption(option);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfunction switchBar()\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tmyChart.clear();\r\n");
      out.write("\t\t\t\toption = {\r\n");
      out.write("\t\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t\t        trigger: 'axis',\r\n");
      out.write("\t\t\t\t        axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n");
      out.write("\t\t\t\t            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    legend: {\r\n");
      out.write("\t\t\t\t        data: ['tss','cod','tn','tp','dissolve','temperture','conductivity']\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    grid: {\r\n");
      out.write("\t\t\t\t        left: '3%',\r\n");
      out.write("\t\t\t\t        right: '4%',\r\n");
      out.write("\t\t\t\t        bottom: '3%',\r\n");
      out.write("\t\t\t\t        containLabel: true\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    xAxis:  {\r\n");
      out.write("\t\t\t\t        type: 'value'\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    yAxis: {\r\n");
      out.write("\t\t\t\t        type: 'category',\r\n");
      out.write("\t\t\t\t        data:itime\r\n");
      out.write("\t\t\t\t    },\r\n");
      out.write("\t\t\t\t    series: [\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name: 'tss',\r\n");
      out.write("\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t            stack: '总量',\r\n");
      out.write("\t\t\t\t            label: {\r\n");
      out.write("\t\t\t\t                normal: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t\t                    position: 'insideRight'\r\n");
      out.write("\t\t\t\t                }\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            data: tss\r\n");
      out.write("\t\t\t\t        },\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name: 'cod',\r\n");
      out.write("\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t            stack: '总量',\r\n");
      out.write("\t\t\t\t            label: {\r\n");
      out.write("\t\t\t\t                normal: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t\t                    position: 'insideRight'\r\n");
      out.write("\t\t\t\t                }\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            data: cod\r\n");
      out.write("\t\t\t\t        },\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name: 'tn',\r\n");
      out.write("\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t            stack: '总量',\r\n");
      out.write("\t\t\t\t            label: {\r\n");
      out.write("\t\t\t\t                normal: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t\t                    position: 'insideRight'\r\n");
      out.write("\t\t\t\t                }\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            data:tn\r\n");
      out.write("\t\t\t\t        },\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name: 'tp',\r\n");
      out.write("\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t            stack: '总量',\r\n");
      out.write("\t\t\t\t            label: {\r\n");
      out.write("\t\t\t\t                normal: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t\t                    position: 'insideRight'\r\n");
      out.write("\t\t\t\t                }\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            data:tp\r\n");
      out.write("\t\t\t\t        },\r\n");
      out.write("\t\t\t\t        {\r\n");
      out.write("\t\t\t\t            name: 'conductivity',\r\n");
      out.write("\t\t\t\t            type: 'bar',\r\n");
      out.write("\t\t\t\t            stack: '总量',\r\n");
      out.write("\t\t\t\t            label: {\r\n");
      out.write("\t\t\t\t                normal: {\r\n");
      out.write("\t\t\t\t                    show: true,\r\n");
      out.write("\t\t\t\t                    position: 'insideRight'\r\n");
      out.write("\t\t\t\t                }\r\n");
      out.write("\t\t\t\t            },\r\n");
      out.write("\t\t\t\t            data: condu\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tmyChart.setOption(option);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tfunction switchLine()\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tmyChart.clear();\r\n");
      out.write("\t\t\t\toption = {\r\n");
      out.write("\t\t\t\t\t    title : {\r\n");
      out.write("\t\t\t\t\t        text: '水质参数变化',\r\n");
      out.write("\t\t\t\t\t        subtext: '纯属虚构'\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    tooltip : {\r\n");
      out.write("\t\t\t\t\t        trigger: 'axis'\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    legend: {\r\n");
      out.write("\t\t\t\t\t        data:['tss','cod','tn','tp','dissolve','temperture','conductivity'],\r\n");
      out.write("\t\t\t\t\t        y:60\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    toolbox: {\r\n");
      out.write("\t\t\t\t\t        show : true,\r\n");
      out.write("\t\t\t\t\t        feature : {\r\n");
      out.write("\t\t\t\t\t            mark : {show: true},\r\n");
      out.write("\t\t\t\t\t            dataView : {show: true, readOnly: false},\r\n");
      out.write("\t\t\t\t\t            magicType : {show: true, type: ['line', 'bar']},\r\n");
      out.write("\t\t\t\t\t            restore : {show: true},\r\n");
      out.write("\t\t\t\t\t            saveAsImage : {show: true}\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    grid: {\r\n");
      out.write("\t\t\t\t\t    \t\t/* top:'30%' */\r\n");
      out.write("\t\t\t\t\t    \t\ty:110,\r\n");
      out.write("\t\t\t\t\t    \t\ty2:20,\r\n");
      out.write("\t\t\t\t\t    \t\tx:100\r\n");
      out.write("\t\t\t\t\t    \t  },\r\n");
      out.write("\t\t\t\t\t    calculable : true,\r\n");
      out.write("\t\t\t\t\t    xAxis : [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            type : 'category',\r\n");
      out.write("\t\t\t\t\t            boundaryGap : false,\r\n");
      out.write("\t\t\t\t\t            data : itime,\r\n");
      out.write("\t\t\t\t\t            boundaryGap:true\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ],\r\n");
      out.write("\t\t\t\t\t    yAxis : [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            type : 'value',\r\n");
      out.write("\t\t\t\t\t            name:'各值'\r\n");
      out.write("\t\t\t\t\t           /*  axisLabel : {\r\n");
      out.write("\t\t\t\t\t                formatter: '{value} °C'\r\n");
      out.write("\t\t\t\t\t            } */\r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            type : 'value',\r\n");
      out.write("\t\t\t\t\t             name : '温度',\r\n");
      out.write("\t\t\t\t\t            axisLabel : {\r\n");
      out.write("\t\t\t\t\t                formatter: '{value} °C'\r\n");
      out.write("\t\t\t\t\t            },\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ],\r\n");
      out.write("\t\t\t\t\t    series : [\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name:'tss',\r\n");
      out.write("\t\t\t\t\t            type:'line',\r\n");
      out.write("\t\t\t\t\t            data:tss,\r\n");
      out.write("\t\t\t\t\t          /*   markPoint : {\r\n");
      out.write("\t\t\t\t\t                data : [\r\n");
      out.write("\t\t\t\t\t                    {type : 'max', name: '最大值'},\r\n");
      out.write("\t\t\t\t\t                    {type : 'min', name: '最小值'}\r\n");
      out.write("\t\t\t\t\t                ]\r\n");
      out.write("\t\t\t\t\t            },\r\n");
      out.write("\t\t\t\t\t            markLine : {\r\n");
      out.write("\t\t\t\t\t                data : [\r\n");
      out.write("\t\t\t\t\t                    {type : 'average', name: '平均值'}\r\n");
      out.write("\t\t\t\t\t                ]\r\n");
      out.write("\t\t\t\t\t            } */\r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name:'cod',\r\n");
      out.write("\t\t\t\t\t            type:'line',\r\n");
      out.write("\t\t\t\t\t            data:cod\r\n");
      out.write("\t\t\t\t\t          \r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name:'tn',\r\n");
      out.write("\t\t\t\t\t            type:'line',\r\n");
      out.write("\t\t\t\t\t            data:tn\r\n");
      out.write("\t\t\t\t\t          \r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name:'tp',\r\n");
      out.write("\t\t\t\t\t            type:'line',\r\n");
      out.write("\t\t\t\t\t            data:tp\r\n");
      out.write("\t\t\t\t\t          \r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t      /*    {\r\n");
      out.write("\t\t\t\t\t            name:'nhn',\r\n");
      out.write("\t\t\t\t\t            type:'bar',\r\n");
      out.write("\t\t\t\t\t            data:nhn\r\n");
      out.write("\t\t\t\t\t          \r\n");
      out.write("\t\t\t\t\t        }, */\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name:'temperture',\r\n");
      out.write("\t\t\t\t\t            type:'bar',\r\n");
      out.write("\t\t\t\t\t            data:temper,\r\n");
      out.write("\t\t\t\t\t            yAxisIndex: 1,\r\n");
      out.write("\t\t\t\t\t            barWidth:20,\r\n");
      out.write("\t\t\t\t\t            barCateGoryGap:20\r\n");
      out.write("\t\t\t\t\t          \r\n");
      out.write("\t\t\t\t\t        },\r\n");
      out.write("\t\t\t\t\t        {\r\n");
      out.write("\t\t\t\t\t            name:'conductivity',\r\n");
      out.write("\t\t\t\t\t            type:'line',\r\n");
      out.write("\t\t\t\t\t            data:condu\r\n");
      out.write("\t\t\t\t\t          \r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t\t};\r\n");
      out.write("\t\t\t\t\tmyChart.setOption(option);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /WEB-INF/jsp/stationDetail.jsp(66,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/stationDetail.jsp(66,2) '${index}'",_el_expressionfactory.createValueExpression(_jspx_page_context.getELContext(),"${index}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
    // /WEB-INF/jsp/stationDetail.jsp(66,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("i");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\titime.push(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.itime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write("\");\r\n");
          out.write("\t\t\ttss.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.tss}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\tcod.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.cod}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\ttn.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.tn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\ttp.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.tp}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\tdis.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.dissolve}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\ttemper.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.temper}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\tnhn.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.nhn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\tcondu.push(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.conductivity}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
          out.write(");\r\n");
          out.write("\t\t\t\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }
}
