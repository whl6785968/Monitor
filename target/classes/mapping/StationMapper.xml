<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.StationMapper" >
  <resultMap id="BaseResultMap" type="model.Station" >
    <id column="sid" property="sid" jdbcType="VARCHAR" />
    <result column="did" property="did" jdbcType="INTEGER" />
    <result column="charge" property="charge" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="longtitude" property="longtitude" jdbcType="REAL" />
    <result column="latitude" property="latitude" jdbcType="REAL" />
    <result column="slevel" property="slevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sid, did, charge, location, longtitude, latitude, slevel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.StationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from station
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from station
    where sid = #{sid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from station
    where sid = #{sid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.StationExample" >
    delete from station
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Station" >
    insert into station (sid, did, charge, 
      location, longtitude, latitude, 
      slevel)
    values (#{sid,jdbcType=VARCHAR}, #{did,jdbcType=INTEGER}, #{charge,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{longtitude,jdbcType=REAL}, #{latitude,jdbcType=REAL}, 
      #{slevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.Station" >
    insert into station
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="did != null" >
        did,
      </if>
      <if test="charge != null" >
        charge,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="longtitude != null" >
        longtitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="slevel != null" >
        slevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="did != null" >
        #{did,jdbcType=INTEGER},
      </if>
      <if test="charge != null" >
        #{charge,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="longtitude != null" >
        #{longtitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=REAL},
      </if>
      <if test="slevel != null" >
        #{slevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.StationExample" resultType="java.lang.Integer" >
    select count(*) from station
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update station
    <set >
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.did != null" >
        did = #{record.did,jdbcType=INTEGER},
      </if>
      <if test="record.charge != null" >
        charge = #{record.charge,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.longtitude != null" >
        longtitude = #{record.longtitude,jdbcType=REAL},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.slevel != null" >
        slevel = #{record.slevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update station
    set sid = #{record.sid,jdbcType=VARCHAR},
      did = #{record.did,jdbcType=INTEGER},
      charge = #{record.charge,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      longtitude = #{record.longtitude,jdbcType=REAL},
      latitude = #{record.latitude,jdbcType=REAL},
      slevel = #{record.slevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Station" >
    update station
    <set >
      <if test="did != null" >
        did = #{did,jdbcType=INTEGER},
      </if>
      <if test="charge != null" >
        charge = #{charge,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="longtitude != null" >
        longtitude = #{longtitude,jdbcType=REAL},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="slevel != null" >
        slevel = #{slevel,jdbcType=INTEGER},
      </if>
    </set>
    where sid = #{sid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Station" >
    update station
    set did = #{did,jdbcType=INTEGER},
      charge = #{charge,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      longtitude = #{longtitude,jdbcType=REAL},
      latitude = #{latitude,jdbcType=REAL},
      slevel = #{slevel,jdbcType=INTEGER}
    where sid = #{sid,jdbcType=VARCHAR}
  </update>
</mapper>