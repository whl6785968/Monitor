<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.EquipmentMapper" >
  <resultMap id="BaseResultMap" type="model.Equipment" >
    <id column="eid" property="eid" jdbcType="BIGINT" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="eparam1" property="eparam1" jdbcType="REAL" />
    <result column="eparam2" property="eparam2" jdbcType="REAL" />
    <result column="eparam3" property="eparam3" jdbcType="REAL" />
    <result column="eparam4" property="eparam4" jdbcType="REAL" />
    <result column="eparam5" property="eparam5" jdbcType="REAL" />
    <result column="eparam6" property="eparam6" jdbcType="REAL" />
    <result column="eparam7" property="eparam7" jdbcType="REAL" />
    <result column="estate1" property="estate1" jdbcType="VARCHAR" />
    <result column="estate2" property="estate2" jdbcType="VARCHAR" />
    <result column="estate3" property="estate3" jdbcType="VARCHAR" />
    <result column="equiPic" property="equipic" jdbcType="VARCHAR" />
  </resultMap>
  <select id="getItemList" resultType="model.SearchItem">
  	select eid,ename,estate1,equiPic from equipment
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    eid, ename, eparam1, eparam2, eparam3, eparam4, eparam5, eparam6, eparam7, estate1, 
    estate2, estate3, equiPic
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.EquipmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from equipment
    where eid = #{eid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from equipment
    where eid = #{eid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="model.EquipmentExample" >
    delete from equipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Equipment" >
    insert into equipment (eid, ename, eparam1, 
      eparam2, eparam3, eparam4, eparam5, 
      eparam6, eparam7, estate1, 
      estate2, estate3, equiPic
      )
    values (#{eid,jdbcType=BIGINT}, #{ename,jdbcType=VARCHAR}, #{eparam1,jdbcType=REAL}, 
      #{eparam2,jdbcType=REAL}, #{eparam3,jdbcType=REAL}, #{eparam4,jdbcType=REAL}, #{eparam5,jdbcType=REAL}, 
      #{eparam6,jdbcType=REAL}, #{eparam7,jdbcType=REAL}, #{estate1,jdbcType=VARCHAR}, 
      #{estate2,jdbcType=VARCHAR}, #{estate3,jdbcType=VARCHAR}, #{equipic,jdbcType=VARCHAR}
      )
   
  </insert>
  <insert id="insertSelective" parameterType="model.Equipment" >
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        eid,
      </if>
      <if test="ename != null" >
        ename,
      </if>
      <if test="eparam1 != null" >
        eparam1,
      </if>
      <if test="eparam2 != null" >
        eparam2,
      </if>
      <if test="eparam3 != null" >
        eparam3,
      </if>
      <if test="eparam4 != null" >
        eparam4,
      </if>
      <if test="eparam5 != null" >
        eparam5,
      </if>
      <if test="eparam6 != null" >
        eparam6,
      </if>
      <if test="eparam7 != null" >
        eparam7,
      </if>
      <if test="estate1 != null" >
        estate1,
      </if>
      <if test="estate2 != null" >
        estate2,
      </if>
      <if test="estate3 != null" >
        estate3,
      </if>
      <if test="equipic != null" >
        equiPic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        #{eid,jdbcType=BIGINT},
      </if>
      <if test="ename != null" >
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="eparam1 != null" >
        #{eparam1,jdbcType=REAL},
      </if>
      <if test="eparam2 != null" >
        #{eparam2,jdbcType=REAL},
      </if>
      <if test="eparam3 != null" >
        #{eparam3,jdbcType=REAL},
      </if>
      <if test="eparam4 != null" >
        #{eparam4,jdbcType=REAL},
      </if>
      <if test="eparam5 != null" >
        #{eparam5,jdbcType=REAL},
      </if>
      <if test="eparam6 != null" >
        #{eparam6,jdbcType=REAL},
      </if>
      <if test="eparam7 != null" >
        #{eparam7,jdbcType=REAL},
      </if>
      <if test="estate1 != null" >
        #{estate1,jdbcType=VARCHAR},
      </if>
      <if test="estate2 != null" >
        #{estate2,jdbcType=VARCHAR},
      </if>
      <if test="estate3 != null" >
        #{estate3,jdbcType=VARCHAR},
      </if>
      <if test="equipic != null" >
        #{equipic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.EquipmentExample" resultType="java.lang.Integer" >
    select count(*) from equipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update equipment
    <set >
      <if test="record.eid != null" >
        eid = #{record.eid,jdbcType=BIGINT},
      </if>
      <if test="record.ename != null" >
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.eparam1 != null" >
        eparam1 = #{record.eparam1,jdbcType=REAL},
      </if>
      <if test="record.eparam2 != null" >
        eparam2 = #{record.eparam2,jdbcType=REAL},
      </if>
      <if test="record.eparam3 != null" >
        eparam3 = #{record.eparam3,jdbcType=REAL},
      </if>
      <if test="record.eparam4 != null" >
        eparam4 = #{record.eparam4,jdbcType=REAL},
      </if>
      <if test="record.eparam5 != null" >
        eparam5 = #{record.eparam5,jdbcType=REAL},
      </if>
      <if test="record.eparam6 != null" >
        eparam6 = #{record.eparam6,jdbcType=REAL},
      </if>
      <if test="record.eparam7 != null" >
        eparam7 = #{record.eparam7,jdbcType=REAL},
      </if>
      <if test="record.estate1 != null" >
        estate1 = #{record.estate1,jdbcType=VARCHAR},
      </if>
      <if test="record.estate2 != null" >
        estate2 = #{record.estate2,jdbcType=VARCHAR},
      </if>
      <if test="record.estate3 != null" >
        estate3 = #{record.estate3,jdbcType=VARCHAR},
      </if>
      <if test="record.equipic != null" >
        equiPic = #{record.equipic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update equipment
    set eid = #{record.eid,jdbcType=BIGINT},
      ename = #{record.ename,jdbcType=VARCHAR},
      eparam1 = #{record.eparam1,jdbcType=REAL},
      eparam2 = #{record.eparam2,jdbcType=REAL},
      eparam3 = #{record.eparam3,jdbcType=REAL},
      eparam4 = #{record.eparam4,jdbcType=REAL},
      eparam5 = #{record.eparam5,jdbcType=REAL},
      eparam6 = #{record.eparam6,jdbcType=REAL},
      eparam7 = #{record.eparam7,jdbcType=REAL},
      estate1 = #{record.estate1,jdbcType=VARCHAR},
      estate2 = #{record.estate2,jdbcType=VARCHAR},
      estate3 = #{record.estate3,jdbcType=VARCHAR},
      equiPic = #{record.equipic,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Equipment" >
    update equipment
    <set >
      <if test="ename != null" >
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="eparam1 != null" >
        eparam1 = #{eparam1,jdbcType=REAL},
      </if>
      <if test="eparam2 != null" >
        eparam2 = #{eparam2,jdbcType=REAL},
      </if>
      <if test="eparam3 != null" >
        eparam3 = #{eparam3,jdbcType=REAL},
      </if>
      <if test="eparam4 != null" >
        eparam4 = #{eparam4,jdbcType=REAL},
      </if>
      <if test="eparam5 != null" >
        eparam5 = #{eparam5,jdbcType=REAL},
      </if>
      <if test="eparam6 != null" >
        eparam6 = #{eparam6,jdbcType=REAL},
      </if>
      <if test="eparam7 != null" >
        eparam7 = #{eparam7,jdbcType=REAL},
      </if>
      <if test="estate1 != null" >
        estate1 = #{estate1,jdbcType=VARCHAR},
      </if>
      <if test="estate2 != null" >
        estate2 = #{estate2,jdbcType=VARCHAR},
      </if>
      <if test="estate3 != null" >
        estate3 = #{estate3,jdbcType=VARCHAR},
      </if>
      <if test="equipic != null" >
        equiPic = #{equipic,jdbcType=VARCHAR},
      </if>
    </set>
    where eid = #{eid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Equipment" >
    update equipment
    set ename = #{ename,jdbcType=VARCHAR},
      eparam1 = #{eparam1,jdbcType=REAL},
      eparam2 = #{eparam2,jdbcType=REAL},
      eparam3 = #{eparam3,jdbcType=REAL},
      eparam4 = #{eparam4,jdbcType=REAL},
      eparam5 = #{eparam5,jdbcType=REAL},
      eparam6 = #{eparam6,jdbcType=REAL},
      eparam7 = #{eparam7,jdbcType=REAL},
      estate1 = #{estate1,jdbcType=VARCHAR},
      estate2 = #{estate2,jdbcType=VARCHAR},
      estate3 = #{estate3,jdbcType=VARCHAR},
      equiPic = #{equipic,jdbcType=VARCHAR}
    where eid = #{eid,jdbcType=BIGINT}
  </update>
</mapper>