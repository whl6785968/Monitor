<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.MuserMapper" >
  <resultMap id="BaseResultMap" type="model.Muser" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="mname" property="mname" jdbcType="VARCHAR" />
    <result column="mdate" property="mdate" jdbcType="VARCHAR" />
    <result column="auth" property="auth" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="links" property="links" jdbcType="VARCHAR" />
    <result column="others" property="others" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mname, mdate, auth, email, links, others
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.MuserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from muser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from muser
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from muser
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.MuserExample" >
    delete from muser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Muser" >
    insert into muser (id, mname, mdate, 
      auth, email, links, 
      others)
    values (#{id,jdbcType=VARCHAR}, #{mname,jdbcType=VARCHAR}, #{mdate,jdbcType=VARCHAR}, 
      #{auth,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{links,jdbcType=VARCHAR}, 
      #{others,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.Muser" >
    insert into muser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mname != null" >
        mname,
      </if>
      <if test="mdate != null" >
        mdate,
      </if>
      <if test="auth != null" >
        auth,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="links != null" >
        links,
      </if>
      <if test="others != null" >
        others,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="mname != null" >
        #{mname,jdbcType=VARCHAR},
      </if>
      <if test="mdate != null" >
        #{mdate,jdbcType=VARCHAR},
      </if>
      <if test="auth != null" >
        #{auth,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="links != null" >
        #{links,jdbcType=VARCHAR},
      </if>
      <if test="others != null" >
        #{others,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.MuserExample" resultType="java.lang.Integer" >
    select count(*) from muser
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update muser
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.mname != null" >
        mname = #{record.mname,jdbcType=VARCHAR},
      </if>
      <if test="record.mdate != null" >
        mdate = #{record.mdate,jdbcType=VARCHAR},
      </if>
      <if test="record.auth != null" >
        auth = #{record.auth,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.links != null" >
        links = #{record.links,jdbcType=VARCHAR},
      </if>
      <if test="record.others != null" >
        others = #{record.others,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update muser
    set id = #{record.id,jdbcType=VARCHAR},
      mname = #{record.mname,jdbcType=VARCHAR},
      mdate = #{record.mdate,jdbcType=VARCHAR},
      auth = #{record.auth,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      links = #{record.links,jdbcType=VARCHAR},
      others = #{record.others,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Muser" >
    update muser
    <set >
      <if test="mname != null" >
        mname = #{mname,jdbcType=VARCHAR},
      </if>
      <if test="mdate != null" >
        mdate = #{mdate,jdbcType=VARCHAR},
      </if>
      <if test="auth != null" >
        auth = #{auth,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="links != null" >
        links = #{links,jdbcType=VARCHAR},
      </if>
      <if test="others != null" >
        others = #{others,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Muser" >
    update muser
    set mname = #{mname,jdbcType=VARCHAR},
      mdate = #{mdate,jdbcType=VARCHAR},
      auth = #{auth,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      links = #{links,jdbcType=VARCHAR},
      others = #{others,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>